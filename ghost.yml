# Playbook pour installation de Node.js 18.x compatible avec Ghost
---
- hosts: all
  become: true

  vars:
    dir: /var/www/ghost

  tasks:
    - name: Set timezone to Europe/Paris
      timezone:
        name: Europe/Paris

    - name: Update apt-cache
      apt:
        update_cache: yes

    # Installer gnupg pour gérer les clés de dépôt
    - name: Install gnupg
      apt:
        name: gnupg
        state: present
      tags: gnupg

    # Swap
    - import_tasks: swap.yml
      tags: swap

    # Nginx
    - name: Nginx | Check if is present
      command: test -x /usr/sbin/nginx
      ignore_errors: yes
      register: nginx_present
      tags: nginx

    - name: Nginx | Install
      apt:
        name: nginx
        state: present
      tags: nginx
      when: nginx_present.rc != 0

    - name: Nginx | Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      tags: nginx
      when: nginx_present.rc != 0
      become: yes

    - name: Nginx | Reload
      service:
        name: nginx
        state: reloaded
      when: nginx_present.rc != 0
      become: yes

    # Config Nginx
    - name: Upload nginx site config
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-enabled/ghost
      tags: nginx_config

    # MariaDB
    - name: Install MariaDB
      apt:
        name: mariadb-server
        state: present
      tags: mariadb

    # Node.js 18.x
    - name: Add Node.js 18.x repo key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
      tags: nodejs

    - name: Add Node.js 18.x repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_18.x bullseye main
        state: present
      tags: nodejs

    - name: Update apt cache after adding Node.js repo
      apt:
        update_cache: yes
      tags: nodejs

    - name: Install Node.js (v18)
      apt:
        name: nodejs
        state: present
      tags: nodejs

    - name: Check Node.js version
      command: node -v
      register: node_version

    - debug:
        var: node_version.stdout

    - name: Check npm version
      command: npm -v
      register: npm_version

    - debug:
        var: npm_version.stdout

    # Installation de Ghost-CLI
    - name: Install ghost-cli
      npm:
        name: ghost-cli
        global: yes
      tags: ghost_cli

    # Configuration du répertoire de Ghost
    - name: Create ghost directory
      file:
        path: "{{ dir }}"
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'
      tags: ghost

    - name: Install Ghost
      command: ghost install local
      args:
        chdir: "{{ dir }}"
      tags: ghost_install
      become: yes
      become_user: vagrant
      environment:
        NODE_ENV: production
